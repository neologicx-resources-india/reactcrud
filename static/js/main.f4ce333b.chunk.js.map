{"version":3,"sources":["components/Header.js","components/ListData.js","components/List.js","components/Form.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Form","inline","FormControl","type","placeholder","Button","variant","ListData","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handelDelete","event","preventDefault","target","value","fetch","method","headers","Content-Type","body","JSON","stringify","then","res","console","log","handelSingledata","setState","status","tmp_id","json","name","data","details","handelClose","e","window","location","reload","updatesubmit","state","handelname","handeldetails","handeltype","daa","Helper_default","Fragment","image","onClick","Modal_default","show","Title","Body","onSubmit","onChange","Footer","Button_default","React","Component","List","info","Table_default","striped","bordered","hover","map","index","components_ListData","key","Forms","handleSubmit","refs","ref","App","_this2","listdata","values","react_router_dom","components_Header","react_router","path","component","components_List","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kOAuBeA,MApBf,WACI,OAAQC,EAAAC,EAAAC,cAAA,WACJF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,MAC5BL,EAAAC,EAAAC,cAACC,EAAA,EAAOG,MAAR,CAAcC,KAAK,SAAnB,eACAP,EAAAC,EAAAC,cAACC,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7BT,EAAAC,EAAAC,cAACC,EAAA,EAAOO,SAAR,CAAiBC,GAAG,oBAClBX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAKC,UAAU,WACbb,EAAAC,EAAAC,cAACU,EAAA,EAAIE,KAAL,CAAUP,KAAK,SAAf,WACAP,EAAAC,EAAAC,cAACU,EAAA,EAAIE,KAAL,CAAUP,KAAK,SAAf,SAEFP,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMC,QAAM,GACVhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAaC,KAAK,OAAOC,YAAY,SAASN,UAAU,YACxDb,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAQC,QAAQ,mBAAhB,mFC0HKC,cAnIb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAaRQ,aAAe,SAAAC,GACbA,EAAMC,iBAEN,IAAMtB,EAAKqB,EAAME,OAAOC,MACxBC,MAAM,mCAAoC,CACxCC,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB/B,GAAIA,MAELgC,KAAK,SAAAC,GAAG,OAAGC,QAAQC,IAAIF,MA1BTpB,EA6BnBuB,iBAAiB,SAACf,GAChBA,EAAMC,iBACN,IAAMtB,EAAKqB,EAAME,OAAOvB,GACxBa,EAAKwB,SAAS,CAACC,QAAO,EAAKC,OAAOvC,IAClCyB,MAAM,0CAA2C,CAC/CC,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB/B,GAAIA,MAELgC,KAAK,SAAAC,GAAG,OAAGA,EAAIO,SACfR,KAAK,SAAAC,GACApB,EAAKwB,SAAS,CAACI,KAAOR,EAAIS,KAAK,GAAGD,KAAKE,QAAUV,EAAIS,KAAK,GAAGC,QAAQpC,KAAO0B,EAAIS,KAAK,GAAGnC,UA3C/EM,EA+CpB+B,YAAY,SAACC,GACVC,OAAOC,SAASC,UAhDCnC,EAkDnBoC,aAAa,SAACJ,GACVA,EAAEvB,iBAEF,IAAMtB,EAAIa,EAAKqC,MAAMX,OACfE,EAAK5B,EAAKqC,MAAMT,KAChBE,EAAQ9B,EAAKqC,MAAMP,QACnBpC,EAAKM,EAAKqC,MAAM3C,KACtBkB,MAAM,iCAAkC,CACtCC,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB/B,GAAIA,EACJyC,KAAKA,EACLE,QAAQA,EACRpC,KAAKA,MACFyB,KAAK,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,MAnEdpB,EAqEnBsC,WAAc,SAACN,GACbA,EAAEvB,iBACFY,QAAQC,IAAIU,EAAEtB,OAAOC,OACrBX,EAAKwB,SAAS,CAACI,KAAMI,EAAEtB,OAAOC,SAxEbX,EA0EnBuC,cAAiB,SAACP,GAChBA,EAAEvB,iBACFT,EAAKwB,SAAS,CAACM,QAASE,EAAEtB,OAAOC,SA5EhBX,EA8EnBwC,WAAc,SAACR,GACbA,EAAEvB,iBACFT,EAAKwB,SAAS,CAAC9B,KAAMsC,EAAEtB,OAAOC,SA7E9BX,EAAKqC,MAAQ,CACXR,KAAM9B,EAAM0C,IACZb,KAAK,GACLE,QAAQ,GACRpC,KAAK,GACLgC,OAAO,GACPD,QAAO,GAETJ,QAAQC,IAAI9C,EAAAC,EAAAC,cAACgE,EAAAjE,EAAD,OAXKuB,wEAmFjB,OACExB,EAAAC,EAAAC,cAACF,EAAAC,EAAMkE,SAAP,KACEnE,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAKyB,KAAKkC,MAAMR,KAAK1C,IACrBX,EAAAC,EAAAC,cAAA,UAAKyB,KAAKkC,MAAMR,KAAKD,MACrBpD,EAAAC,EAAAC,cAAA,UAAKyB,KAAKkC,MAAMR,KAAKC,SACrBtD,EAAAC,EAAAC,cAAA,UAAKyB,KAAKkC,MAAMR,KAAKnC,MACrBlB,EAAAC,EAAAC,cAAA,UAAKyB,KAAKkC,MAAMR,KAAKe,OACrBpE,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAQmE,QAAS1C,KAAKoB,iBAAmBZ,MAAM,OAAOxB,GAAIgB,KAAKkC,MAAMR,KAAK1C,IAA1E,SAIFX,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAQmE,QAAS1C,KAAKI,aAAcI,MAAOR,KAAKkC,MAAMR,KAAK1C,IAA3D,YAKJX,EAAAC,EAAAC,cAACoE,EAAArE,EAAD,CAAOsE,KAAM5C,KAAKkC,MAAMZ,QACxBjD,EAAAC,EAAAC,cAACoE,EAAArE,EAAMF,OAAP,KACEC,EAAAC,EAAAC,cAACoE,EAAArE,EAAMuE,MAAP,uBAEFxE,EAAAC,EAAAC,cAACoE,EAAArE,EAAMwE,KAAP,KACEzE,EAAAC,EAAAC,cAAA,QAAMwE,SAAU/C,KAAKiC,cACnB5D,EAAAC,EAAAC,cAAA,SAAOiB,YAAY,OAAOwD,SAAUhD,KAAKmC,WAAY3B,MAAOR,KAAKkC,MAAMT,OACvEpD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOiB,YAAY,UAAUwD,SAAUhD,KAAKoC,cAAgB5B,MAAOR,KAAKkC,MAAMP,UAC9EtD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOiB,YAAY,OAAQwD,SAAUhD,KAAKqC,WAAY7B,MAAOR,KAAKkC,MAAM3C,OACxElB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOgB,KAAK,aAGhBlB,EAAAC,EAAAC,cAACoE,EAAArE,EAAM2E,OAAP,KACE5E,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,CAAQoE,QAAS1C,KAAK4B,YAAapB,MAAM,QAAQd,QAAQ,aAAzD,SAGArB,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,CAAQoB,QAAQ,WAAhB,0BA7HayD,IAAMC,WCoBdC,MArBf,SAAczD,GACX,IAAM8B,EAAO9B,EAAM0D,KACpB,OACEjF,EAAAC,EAAAC,cAACgF,EAAAjF,EAAD,CAAOkF,SAAO,EAACC,UAAQ,EAACC,OAAK,GAC3BrF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,eACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,sBAGJF,EAAAC,EAAAC,cAAA,aACKmD,EAAKiC,IAAI,SAACrB,EAAIsB,GAAL,OAAavF,EAAAC,EAAAC,cAACsF,EAAD,CAAUC,IAAKF,EAAOtB,IAAKA,SCiC7CyB,cAnDb,SAAAA,EAAYnE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+D,IACjBlE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiE,GAAA5D,KAAAH,KAAMJ,KASRoE,aAAe,SAAA3D,GACbA,EAAMC,iBACN,IAAMmB,EAAO5B,EAAKoE,KAAKxC,KAAKjB,MACtBmB,EAAU9B,EAAKoE,KAAKtC,QAAQnB,MAC5BjB,EAAOM,EAAKoE,KAAK1E,KAAKiB,MAC5BC,MAAM,mCAAoC,CACxCC,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAGlBC,KAAMC,KAAKC,UAAU,CACnBU,KAAMA,EACNE,QAASA,EACTpC,KAAMA,MAEPyB,KAAK,SAAAC,GAAQa,OAAOC,SAASC,YAxBhCnC,EAAKqC,MAAQ,CACXT,KAAM,GACNE,QAAS,GACTpC,KAAM,IALSM,wEA+BjB,OACExB,EAAAC,EAAAC,cAAA,QAAMwE,SAAU/C,KAAKgE,cACnB3F,EAAAC,EAAAC,cAAA,qBAEEF,EAAAC,EAAAC,cAAA,SAAOiB,YAAY,OAAO0E,IAAI,UAEhC7F,EAAAC,EAAAC,cAAA,wBAEEF,EAAAC,EAAAC,cAAA,SAAO2F,IAAI,aAEb7F,EAAAC,EAAAC,cAAA,qBAEEF,EAAAC,EAAAC,cAAA,SAAO2F,IAAI,UAEb7F,EAAAC,EAAAC,cAAA,SAAOgB,KAAK,SAASiB,MAAM,mBA9Cf2C,IAAMC,2BCmCXe,cA1Bb,SAAAA,EAAYvE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmE,IACjBtE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqE,GAAAhE,KAAAH,KAAMJ,KACDsC,MAAQ,CACXR,KAAM,IAHS7B,mFAOC,IAAAuE,EAAApE,KAClBS,MAAM,qCACHO,KAAK,SAAAC,GAAG,OAAIA,EAAIO,SAChBR,KAAK,SAAAC,GAAG,OAAImD,EAAK/C,SAAS,CAAEK,KAAMT,EAAIS,0CAIzC,IAAM2C,EAAWvE,OAAOwE,OAAOtE,KAAKkC,MAAMR,MAE1C,OACErD,EAAAC,EAAAC,cAACgG,EAAA,EAAD,KACElG,EAAAC,EAAAC,cAACiG,EAAD,MACAnG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAOC,KAAK,UAAUC,UAAW,kBAAItG,EAAAC,EAAAC,cAACqG,EAAD,CAAMtB,KAAMe,OACjDhG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAOC,KAAK,UAAUC,UAAWZ,YArBvBZ,IAAMC,WCGJyB,QACW,cAA7B/C,OAAOC,SAAS+C,UAEe,UAA7BhD,OAAOC,SAAS+C,UAEhBhD,OAAOC,SAAS+C,SAASC,MACvB,2DCZNC,IAASC,OAAO5G,EAAAC,EAAAC,cAAC2G,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvE,KAAK,SAAAwE,GACjCA,EAAaC","file":"static/js/main.f4ce333b.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Navbar,Nav,Form,FormControl,Button} from 'react-bootstrap'\r\n\r\nfunction Header(){\r\n    return (<div>\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n      <Navbar.Brand href=\"#home\">Simple Crud</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"/list\">Listing</Nav.Link>\r\n          <Nav.Link href=\"/form\">Form</Nav.Link>\r\n        </Nav>\r\n        <Form inline>\r\n          <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n          <Button variant=\"outline-success\">Search</Button>\r\n        </Form>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n    </div>);\r\n    \r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport Hey from './Helper';\r\nclass ListData extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n                      \r\n    this.state = {\r\n      data: props.daa,\r\n      name:'',\r\n      details:'',\r\n      type:'',\r\n      tmp_id:'',\r\n      status:false\r\n    };\r\n    console.log(<Hey/>)\r\n    \r\n  }\r\n  handelDelete = event =>{\r\n    event.preventDefault();\r\n   \r\n    const id = event.target.value;\r\n    fetch(\"http://127.0.0.1:8000/api/delete\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        id: id\r\n      })\r\n    }).then(res =>console.log(res));\r\n    \r\n  }\r\n  handelSingledata=(event)=>{\r\n    event.preventDefault();\r\n    const id = event.target.id;\r\n    this.setState({status:true,tmp_id:id})\r\n    fetch(\"http://127.0.0.1:8000/api/singledetails\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        id: id\r\n      })\r\n    }).then(res =>res.json())\r\n      .then(res=>{\r\n            this.setState({'name':res.data[0].name,'details':res.data[0].details,'type':res.data[0].type})\r\n      })\r\n\r\n  }\r\n handelClose=(e)=> {\r\n    window.location.reload();\r\n  }\r\n  updatesubmit=(e)=>{\r\n      e.preventDefault();\r\n      // console.log(this.refs.name.value);\r\n      const id =this.state.tmp_id;\r\n      const name=this.state.name;\r\n      const details=this.state.details;\r\n      const type=this.state.type;\r\n      fetch(\"http://127.0.0.1:8000/api/edit\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          id: id,\r\n          name:name,\r\n          details:details,\r\n          type:type\r\n        })}).then(res=>console.log(res))\r\n  }\r\n  handelname  = (e) =>{\r\n    e.preventDefault();\r\n    console.log(e.target.value)\r\n    this.setState({name: e.target.value});\r\n  }\r\n  handeldetails  = (e) =>{\r\n    e.preventDefault();\r\n    this.setState({details: e.target.value});\r\n  }\r\n  handeltype  = (e) =>{\r\n    e.preventDefault();\r\n    this.setState({type: e.target.value});\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <tr>\r\n          <td>{this.state.data.id}</td> \r\n          <td>{this.state.data.name}</td>\r\n          <td>{this.state.data.details}</td>\r\n          <td>{this.state.data.type}</td>\r\n          <td>{this.state.data.image}</td>\r\n          <td>\r\n            <button onClick={this.handelSingledata}  value=\"true\" id={this.state.data.id}>\r\n              Edit\r\n            </button>\r\n          </td>\r\n          <td>\r\n            <button onClick={this.handelDelete} value={this.state.data.id}>\r\n              Delete\r\n            </button>\r\n          </td>\r\n        </tr>\r\n        <Modal show={this.state.status}>\r\n        <Modal.Header>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <form onSubmit={this.updatesubmit}>\r\n            <input placeholder=\"name\" onChange={this.handelname} value={this.state.name} />\r\n            <br />\r\n            <br />\r\n            <input placeholder=\"details\" onChange={this.handeldetails}  value={this.state.details} />\r\n            <br />\r\n            <br />\r\n            <input placeholder=\"type\"  onChange={this.handeltype} value={this.state.type}/>\r\n            <br />\r\n            <br />\r\n            <input type=\"submit\" />\r\n          </form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={this.handelClose} value=\"false\" variant=\"secondary\">\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\">Save Changes</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default ListData;\r\n","import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nimport ListData from \"./ListData\";\r\nfunction List(props) {\r\n   const data = props.info\r\n  return (\r\n    <Table striped bordered hover>\r\n      <thead>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>Name</th>\r\n          <th>Details</th>\r\n          <th>Type</th>\r\n          <th>Image</th>\r\n          <th>Edit</th>\r\n          <th>Delete</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n          {data.map((daa,index)=><ListData key={index} daa={daa} />)}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\nexport default List;\r\n","import React from \"react\";\r\nclass Forms extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      details: \"\",\r\n      type: \"\"\r\n    };\r\n  }\r\n\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const name = this.refs.name.value;\r\n    const details = this.refs.details.value;\r\n    const type = this.refs.type.value;\r\n    fetch(\"http://127.0.0.1:8000/api/create\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        details: details,\r\n        type: type\r\n      })\r\n    }).then(res => {window.location.reload()});\r\n    \r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name:\r\n          <input placeholder=\"name\" ref=\"name\" />\r\n        </label>\r\n        <label>\r\n          Details:\r\n          <input ref=\"details\" />\r\n        </label>\r\n        <label>\r\n          Type:\r\n          <input ref=\"type\" />\r\n        </label>\r\n        <input type=\"submit\" value=\"Submit\" />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Forms;\r\n","import React from \"react\";\n// import logo from './logo.svg';\n// import './App.css';\n//components imports\nimport Header from \"./components/Header\";\nimport List from \"./components/List\";\nimport Forms from \"./components/Form\";\n// import Example from \"./components/Test\"\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://127.0.0.1:8000/api/alltask\")\n      .then(res => res.json())\n      .then(res => this.setState({ data: res.data }));\n  }\n\n  render() {\n    const listdata = Object.values(this.state.data);\n\n    return (\n      <Router>\n        <Header />\n        <Route path=\"#/list/\" component={()=><List info={listdata}/>} />\n        <Route path=\"#/form/\" component={Forms} />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}